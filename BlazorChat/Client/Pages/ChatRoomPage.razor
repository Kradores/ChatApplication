@page "/chats/{id}"

@using Microsoft.AspNetCore.SignalR.Client
@using BlazorChat.Client.StateContainers

@inject NavigationManager Navigation
@implements IAsyncDisposable

<h3>ChatRoom @Id</h3>

<div class="row">
    @foreach (string user in ChatHub.UsersInRoom)
    {
        <div class="col" style="width: fit-content">@user</div>
    }
</div>
<div class="form-group">
    <label>
        Message:
        <input @bind="messageInput" size="50" />
    </label>
</div>
<button @onclick="@Send" disabled="@(!ChatHub.IsConnected)">Send</button>

<ul id="messagesList">
    @foreach (var message in ChatHub.Messages)
    {
        <li>@message</li>
    }
</ul>

@code {
    [Parameter]
    public string? Id { get; set; } = null;

    private string? messageInput;

    protected override async Task OnInitializedAsync()
    {
        ChatHub.OnStateChange += StateHasChanged;
    }

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        if (Id != null)
        {
            await ChatHub.RemoveFromGroupAsync(Id);
        }

        await base.SetParametersAsync(parameters);
    }

    protected override async Task OnParametersSetAsync()
    {
        await ChatHub.AddToGroupAsync(Id);
    }

    private async Task Send()
    {
        await ChatHub.SendGroupMessageAsync(Id, messageInput);
    }

    public async ValueTask DisposeAsync()
    {
        await ChatHub.RemoveFromGroupAsync(Id);
        ChatHub.OnStateChange -= StateHasChanged;
    }
}
